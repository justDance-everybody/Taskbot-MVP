#!/usr/bin/env python3
"""
Basic test to verify the implementation works
"""

import sys
import os
sys.path.insert(0, os.path.abspath('.'))

def test_imports():
    """Test that all modules can be imported"""
    try:
        from app.config import get_settings
        print("‚úÖ Config module imported successfully")
        
        from app.bitable import FieldType, TaskStatus, CIState
        print("‚úÖ Bitable module imported successfully")
        print(f"   TaskStatus.DRAFT = {TaskStatus.DRAFT.value}")
        print(f"   CIState.SUCCESS = {CIState.SUCCESS.value}")
        
        from app.services.feishu import FeishuService, MessageType
        print("‚úÖ Feishu service imported successfully")
        
        from app.services.llm import LLMService
        print("‚úÖ LLM service imported successfully")
        
        from app.services.match import MatchingService
        print("‚úÖ Matching service imported successfully")
        
        from app.services.ci import CIService
        print("‚úÖ CI service imported successfully")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Import error: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_config():
    """Test configuration loading"""
    try:
        # Set minimal environment variables for testing
        os.environ.update({
            'FEISHU_APP_ID': 'test_app_id',
            'FEISHU_APP_SECRET': 'test_app_secret',
            'FEISHU_VERIFY_TOKEN': 'test_verify_token',
            'FEISHU_BITABLE_APP_TOKEN': 'test_bitable_token',
            'GITHUB_WEBHOOK_SECRET': 'test_github_secret'
        })
        
        from app.config import get_settings
        settings = get_settings()
        
        print("‚úÖ Settings loaded successfully")
        print(f"   App ID: {settings.feishu.app_id}")
        print(f"   Debug mode: {settings.app.debug}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Config error: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_fastapi_app():
    """Test FastAPI app creation"""
    try:
        from app.main import app
        print("‚úÖ FastAPI app created successfully")
        print(f"   App title: {app.title}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå FastAPI app error: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Run all basic tests"""
    print("üöÄ Running basic functionality tests...\n")
    
    tests = [
        ("Import Tests", test_imports),
        ("Configuration Tests", test_config),
        ("FastAPI App Tests", test_fastapi_app),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"üìã {test_name}:")
        if test_func():
            passed += 1
            print(f"‚úÖ {test_name} PASSED\n")
        else:
            print(f"‚ùå {test_name} FAILED\n")
    
    print(f"üìä Test Results: {passed}/{total} tests passed")
    
    if passed == total:
        print("üéâ All basic tests passed! The implementation is working correctly.")
        return 0
    else:
        print("‚ö†Ô∏è  Some tests failed. Please check the errors above.")
        return 1

if __name__ == "__main__":
    exit(main())
