[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "feishu-task-bot"
version = "1.0.0"
description = "A Feishu bot for task assignment and management"
authors = [
    {name = "Feishu Bot Team", email = "team@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business :: Groupware",
]
dependencies = [
    "fastapi==0.111.0",
    "uvicorn[standard]==0.30.1",
    "lark-oapi==1.2.18",
    "httpx==0.27.0",
    "requests==2.32.3",
    "pydantic==2.7.4",
    "pydantic-settings==2.3.4",
    "python-dotenv==1.0.1",
    "PyYAML==6.0.1",
    "openai==1.35.3",
    "google-generativeai==0.7.2",
    "aiofiles==23.2.1",
    "python-multipart==0.0.9",
    "cryptography==42.0.8",
]

[project.optional-dependencies]
dev = [
    "pytest==8.2.2",
    "pytest-asyncio==0.23.7",
    "pytest-mock==3.14.0",
    "pytest-cov==5.0.0",
    "pytest-xdist==3.6.0",
    "black==24.4.2",
    "isort==5.13.2",
    "flake8==7.1.0",
    "mypy==1.10.1",
    "pre-commit==3.7.1",
    "bandit==1.7.5",
    "safety==3.2.0",
]

[project.urls]
Homepage = "https://github.com/example/feishu-task-bot"
Repository = "https://github.com/example/feishu-task-bot"
Issues = "https://github.com/example/feishu-task-bot/issues"

[project.scripts]
feishu-bot = "app.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "lark_oapi.*",
    "google.generativeai.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".env",
    "env",
]
